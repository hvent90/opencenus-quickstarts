/// <reference types="node" />
/**
 * Copyright 2018, OpenCensus Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { BasePlugin, Func } from '@opencensus/core';
import * as httpModule from 'http';
export declare type HttpModule = typeof httpModule;
export declare type RequestFunction = typeof httpModule.request;
/** Http instrumentation plugin for Opencensus */
export declare class HttpPlugin extends BasePlugin {
    /**
     * Attributes Names according to Opencensus HTTP Specs
     * https://github.com/census-instrumentation/opencensus-specs/blob/master/trace/HTTP.md
     */
    static ATTRIBUTE_HTTP_HOST: string;
    static ATTRIBUTE_HTTP_METHOD: string;
    static ATTRIBUTE_HTTP_PATH: string;
    static ATTRIBUTE_HTTP_ROUTE: string;
    static ATTRIBUTE_HTTP_USER_AGENT: string;
    static ATTRIBUTE_HTTP_STATUS_CODE: string;
    static ATTRIBUTE_HTTP_ERROR_NAME: string;
    static ATTRIBUTE_HTTP_ERROR_MESSAGE: string;
    /** Constructs a new HttpPlugin instance. */
    constructor(moduleName: string);
    /**
     * Patches HTTP incoming and outcoming request functions.
     */
    protected applyPatch(): any;
    /** Unpatches all HTTP patched function. */
    protected applyUnpatch(): void;
    /**
     * Creates spans for incoming requests, restoring spans' context if applied.
     */
    protected getPatchIncomingRequestFunction(): (original: (event: string) => boolean) => (event: string, ...args: any[]) => boolean;
    /**
     * Creates spans for outgoing requests, sending spans' context for distributed
     * tracing.
     */
    protected getPatchOutgoingRequestFunction(): (original: Func<httpModule.ClientRequest>) => Func<httpModule.ClientRequest>;
    /**
     * Injects span's context to header for distributed tracing and finshes the
     * span when the response is finished.
     * @param original The original patched function.
     * @param options The arguments to the original function.
     */
    private getMakeRequestTraceFunction(request, options, plugin);
    /**
     * Converts an HTTP status code to an OpenCensus Trace status code.
     * @param statusCode The HTTP status code to convert.
     */
    static convertTraceStatus(statusCode: number): number;
}
/**
 * An enumeration of OpenCensus Trace status codes.
 */
export declare enum TraceStatusCodes {
    UNKNOWN = 2,
    OK = 0,
    INVALID_ARGUMENT = 3,
    DEADLINE_EXCEEDED = 4,
    NOT_FOUND = 5,
    PERMISSION_DENIED = 7,
    UNAUTHENTICATED = 16,
    RESOURCE_EXHAUSTED = 8,
    UNIMPLEMENTED = 12,
    UNAVAILABLE = 14,
}
declare const plugin: HttpPlugin;
export { plugin };
